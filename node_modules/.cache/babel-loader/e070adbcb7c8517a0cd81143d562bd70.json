{"ast":null,"code":"let letters = /^[a-zA-Z+\" \"]+$/;\nlet digits = /^[0-9]+$/;\n\nconst nameValidation = Name => {\n  if (Name === \"\") {\n    return false;\n  } else if (Name.match(letters)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst emailValidation = Email => {\n  let dot = Email.lastIndexOf('.');\n  let atSymbol = Email.indexOf('@');\n\n  if (Email === \"\") {\n    return false;\n  } else if (dot === -1 && atSymbol === -1 || dot === -1 || atSymbol === -1) {\n    return false;\n  } else if (atSymbol !== Email.lastIndexOf('@')) {\n    return false;\n  } else if (dot - atSymbol <= 3) {\n    return false;\n  } else if (atSymbol < 3) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst phoneValidation = Phone => {\n  if (Phone === \"\") {\n    return false;\n  } else if (Phone.match(digits)) {\n    if (Phone.length === 10) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nexport const validation = (Name, Email, Phone, Message) => {\n  const nameValidationStatus = nameValidation(Name);\n  const emailValidationStatus = emailValidation(Email);\n  const phoneValidationStatus = phoneValidation(Phone);\n  console.log(nameValidationStatus, emailValidationStatus, phoneValidationStatus);\n};","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/Projects/freshproteino/src/Component/Contact/Validation.jsx"],"names":["letters","digits","nameValidation","Name","match","emailValidation","Email","dot","lastIndexOf","atSymbol","indexOf","phoneValidation","Phone","length","validation","Message","nameValidationStatus","emailValidationStatus","phoneValidationStatus","console","log"],"mappings":"AAAA,IAAIA,OAAO,GAAG,iBAAd;AACA,IAAIC,MAAM,GAAG,UAAb;;AAEA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAC7B,MAAIA,IAAI,KAAK,EAAb,EAAiB;AACb,WAAO,KAAP;AACH,GAFD,MAEO,IAAIA,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAJ,EAAyB;AAC5B,WAAO,IAAP;AACH,GAFM,MAEA;AACH,WAAO,KAAP;AACH;AACJ,CARD;;AAUA,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAC/B,MAAIC,GAAG,GAAGD,KAAK,CAACE,WAAN,CAAkB,GAAlB,CAAV;AACA,MAAIC,QAAQ,GAAGH,KAAK,CAACI,OAAN,CAAc,GAAd,CAAf;;AACA,MAAIJ,KAAK,KAAK,EAAd,EAAkB;AACd,WAAO,KAAP;AACH,GAFD,MAEO,IAAKC,GAAG,KAAK,CAAC,CAAT,IAAcE,QAAQ,KAAK,CAAC,CAA7B,IAAoCF,GAAG,KAAK,CAAC,CAAT,IAAcE,QAAQ,KAAK,CAAC,CAApE,EAAwE;AAC3E,WAAO,KAAP;AACH,GAFM,MAEA,IAAIA,QAAQ,KAAKH,KAAK,CAACE,WAAN,CAAkB,GAAlB,CAAjB,EAAyC;AAC5C,WAAO,KAAP;AACH,GAFM,MAEA,IAAID,GAAG,GAAGE,QAAN,IAAkB,CAAtB,EAAyB;AAC5B,WAAO,KAAP;AACH,GAFM,MAEA,IAAIA,QAAQ,GAAG,CAAf,EAAkB;AACrB,WAAO,KAAP;AACH,GAFM,MAEA;AACH,WAAO,IAAP;AACH;AACJ,CAhBD;;AAkBA,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,MAAIA,KAAK,KAAK,EAAd,EAAkB;AACd,WAAO,KAAP;AACH,GAFD,MAEO,IAAIA,KAAK,CAACR,KAAN,CAAYH,MAAZ,CAAJ,EAAyB;AAC5B,QAAIW,KAAK,CAACC,MAAN,KAAiB,EAArB,EAAyB;AACrB,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ;AACJ,CAVD;;AAYA,OAAO,MAAMC,UAAU,GAAG,CAACX,IAAD,EAAOG,KAAP,EAAcM,KAAd,EAAqBG,OAArB,KAAiC;AACvD,QAAMC,oBAAoB,GAAGd,cAAc,CAACC,IAAD,CAA3C;AACA,QAAMc,qBAAqB,GAAGZ,eAAe,CAACC,KAAD,CAA7C;AACA,QAAMY,qBAAqB,GAAGP,eAAe,CAACC,KAAD,CAA7C;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,oBAAZ,EAAkCC,qBAAlC,EAAyDC,qBAAzD;AACH,CALM","sourcesContent":["let letters = /^[a-zA-Z+\" \"]+$/;\r\nlet digits = /^[0-9]+$/;\r\n\r\nconst nameValidation = (Name) => {\r\n    if (Name === \"\") {\r\n        return false;\r\n    } else if (Name.match(letters)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst emailValidation = (Email) => {\r\n    let dot = Email.lastIndexOf('.');\r\n    let atSymbol = Email.indexOf('@');\r\n    if (Email === \"\") {\r\n        return false;\r\n    } else if ((dot === -1 && atSymbol === -1) || (dot === -1 || atSymbol === -1)) {\r\n        return false;\r\n    } else if (atSymbol !== Email.lastIndexOf('@')) {\r\n        return false;\r\n    } else if (dot - atSymbol <= 3) {\r\n        return false\r\n    } else if (atSymbol < 3) {\r\n        return false;\r\n    } else {\r\n        return true\r\n    }\r\n}\r\n\r\nconst phoneValidation = (Phone) => {\r\n    if (Phone === \"\") {\r\n        return false;\r\n    } else if (Phone.match(digits)) {\r\n        if (Phone.length === 10) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport const validation = (Name, Email, Phone, Message) => {\r\n    const nameValidationStatus = nameValidation(Name);\r\n    const emailValidationStatus = emailValidation(Email);\r\n    const phoneValidationStatus = phoneValidation(Phone);\r\n    console.log(nameValidationStatus, emailValidationStatus, phoneValidationStatus);\r\n}"]},"metadata":{},"sourceType":"module"}